name: Build, test, and publish Docker Images

env:
  OWNER: ${{ github.repository_owner }}
  IMAGE_NAME: ${{ github.event.repository.name }}

# For more details on events that trigger workflows see:
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on:
  schedule:
    # Weekly, at 07:00 on Monday UTC time
    - cron: "0 7 * * 1"
  pull_request:
    paths:
      - ".github/workflows/docker.yml"
      - "image/**"
      - "tests/**"
      - "requirements-dev.txt"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/docker.yml"
      - "image/**"
      - "tests/**"
      - "requirements-dev.txt"
  workflow_dispatch:

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  # only cancel in-progress jobs or runs for the current workflow - matches against branch & tags
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-publish-images:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repo ‚ö°Ô∏è
        uses: actions/checkout@v4

      - name: Show content
        run: ls -la

      - name: Set Up Python üêç
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install Dev Dependencies üì¶
        run: |
          pip install --upgrade pip
          pip install --upgrade -r requirements-dev.txt

      - name: Get commit sha, this will be used as a tag later on üè∑
        shell: bash
        run: |
          echo "sha12=$(echo ${GITHUB_SHA} | cut -c1-12)" >> $GITHUB_OUTPUT
        id: get_sha

      - name: Build image üõ†
        run: |
          docker pull ${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest || true
          docker build --rm --force-rm \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from=${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest \
            --tag ${{ env.OWNER }}/${{ env.IMAGE_NAME }}:test image/
        # --tag ${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{steps.get_sha.outputs.sha12}}
        env:
          DOCKER_BUILDKIT: 1
          # Full logs for CI build
          BUILDKIT_PROGRESS: plain

      # - name: build
      #   run: |
      #     docker pull ${{ env.OWNER }}/${{ env.IMAGE_NAME }}:test || true
      #     docker pull ${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest || true
      #     docker buildx build \
      #       --build-arg CONTAINER_BUILD_DATE="${CI_JOB_STARTED_AT}"  \
      #       --build-arg CONTAINER_GIT_NAME="${CI_PROJECT_NAME}" \
      #       --build-arg CONTAINER_GIT_URL="${CI_PROJECT_URL}" \
      #       --build-arg CONTAINER_GIT_COMMIT_ID="${CI_COMMIT_SHORT_SHA}" \
      #       --build-arg CONTAINER_VERSION="${CI_COMMIT_REF_NAME}"  \
      #       --build-arg BUILDKIT_INLINE_CACHE=1 \
      #       --cache-from=type=registry,ref=${{ env.OWNER }}/${{ env.IMAGE_NAME }}:test \
      #       --cache-from=type=registry,ref=${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest \
      #       --cache-to=type=registry,ref=${{ env.OWNER }}/${{ env.IMAGE_NAME }}:test,mode=max \
      #       --tag ${{ env.OWNER }}/${{ env.IMAGE_NAME }}:test \
      #       --push \
      #       image/
      #   env:
      #     DOCKER_BUILDKIT: 1
      #     # Full logs for CI build
      #     BUILDKIT_PROGRESS: plain

      - name: Run tests ‚úÖ
        run: python3 -m pytest tests
      
      - name: Run image tests
        run: |
          docker run --rm -v ./tests_image:/tests ${{ env.OWNER }}/${{ env.IMAGE_NAME }}:test /opt/conda/bin/python /tests/test_python.py
          docker run --rm -v ./tests_image:/tests ${{ env.OWNER }}/${{ env.IMAGE_NAME }}:test /opt/conda/bin/R /tests/test_R.py
      
      - name: Login to Docker Hub üîê
        # if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ env.OWNER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag image with latest üè∑
        if: github.ref == 'refs/heads/main' || github.event_name == 'schedule'
        run: docker tag ${{ env.OWNER }}/${{ env.IMAGE_NAME }}:test ${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Image to Docker Hub üì§
        if: github.ref == 'refs/heads/main' || github.event_name == 'schedule'
        run: docker push ${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest
